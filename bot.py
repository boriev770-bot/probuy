import re
import asyncio
from aiogram import Bot, Dispatcher, types

TOKEN = "7559588518:AAEv5n_8N_gGo97HwpZXDHTi3EQ40S1aFcI"
ADMIN_ID = 7095008192  # –í–∞—à Telegram ID

# –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –æ–∂–∏–¥–∞—é—â–∏—Ö –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞
waiting_for_order = set()

# –°–ø–∏—Å–æ–∫ —á–∞—Å—Ç—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤
FAQ = {
    r"(—Å–¥–µ–ª–∞.*|–∑–∞–∫–∞–∑.*)": "–î–ª—è –∑–∞–∫–∞–∑–∞ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–ª–æ–≤–æ '–æ–ø–µ—Ä–∞—Ç–æ—Ä' –∏ –æ–ø–∏—à–∏—Ç–µ —Ç–æ, —á—Ç–æ —Ö–æ—Ç–µ–ª–∏ –±—ã –∑–∞–∫–∞–∑–∞—Ç—å. –ú–µ–Ω–µ–¥–∂–µ—Ä —Å –í–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è.üí¨",
    r"(—Å–∫–æ–ª—å.*|—Å—Ç–æ–∏.*|–¥–æ—Å—Ç–∞–≤–∫.*|—Ü–µ–Ω–∞.*)": "–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ –∏—Å—Ö–æ–¥—è –∏–∑ –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏ –∏ –≤–µ—Å–∞ –≥—Ä—É–∑–∞. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É —Å–ª–æ–≤–æ '–æ–ø–µ—Ä–∞—Ç–æ—Ä', –∏ –º–µ–Ω–µ–¥–∂–µ—Ä —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è.",
    r"(–≤—Ä–µ–º—è.*|—Å—Ä–æ–∫.*|–∫–æ–≥–¥–∞.*–ø—Ä–∏–¥–µ—Ç.*|—á–µ—Ä–µ–∑.*–¥–Ω–µ–π.*|—Å—Ä–æ–∫–∏.*)": "–°—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –±—ã—Å—Ç—Ä—ã–º –∞–≤—Ç–æ: 10-15 –¥–Ω–µ–π, –º–µ–¥–ª–µ–Ω–Ω—ã–º –∞–≤—Ç–æ: 15-20 –¥–Ω–µ–π. (–°—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ —É–∫–∞–∑–∞–Ω—ã –¥–æ —Ä—ã–Ω–∫–∞ –Æ–∂–Ω—ã–µ –í–æ—Ä–æ—Ç–∞ –≤ –≥.–ú–æ—Å–∫–≤–∞.)"
}

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

def find_best_match(user_text):
    user_text = user_text.lower()
    for pattern, answer in FAQ.items():
        if re.search(pattern, user_text):
            return answer
    return None

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! ü§ùüèª –ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –∞ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –Ω–∞–π—Ç–∏ –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—Ç.\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: '–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –¥–æ—Å—Ç–∞–≤–∫–∞?'üöö –∏–ª–∏ '–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑?üì•'\n"
        "–ï—Å–ª–∏ –Ω—É–∂–µ–Ω –∂–∏–≤–æ–π —á–µ–ª–æ–≤–µ–∫ ‚Äî –Ω–∞–ø–∏—à–∏ —Å–ª–æ–≤–æ '–æ–ø–µ—Ä–∞—Ç–æ—Ä'.\n"
        "–ß—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ ‚Äî –≤—ã–±–µ—Ä–∏—Ç–µ /buy –≤ –º–µ–Ω—é."
    )

@dp.message_handler(commands=['buy'])
async def ask_order(message: types.Message):
    user_id = message.from_user.id
    waiting_for_order.add(user_id)
    await message.answer("–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å? –í –∫–∞–∫–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ?üì¶")

@dp.message_handler(content_types=types.ContentTypes.ANY)
async def handle_all_messages(message: types.Message):
    user_id = message.from_user.id
    text = message.text.lower() if message.text else ""

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–æ–≤
    if user_id in waiting_for_order:
        caption = (f"üì¶ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑!\n"
                  f"–ò–º—è: {message.from_user.full_name}\n"
                  f"Username: @{message.from_user.username or '–Ω–µ—Ç'}")

        if message.text:
            caption += f"\n–°–æ–æ–±—â–µ–Ω–∏–µ: {message.text}"
            await bot.send_message(ADMIN_ID, caption)
        elif message.photo:
            await bot.send_photo(ADMIN_ID, message.photo[-1].file_id, caption=caption)
        elif message.document:
            await bot.send_document(ADMIN_ID, message.document.file_id, caption=caption)
        else:
            await bot.send_message(ADMIN_ID, caption + "\n[–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª –Ω–µ—Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è]")

        await message.answer("–°–ø–∞—Å–∏–±–æ! –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à –∑–∞–∫–∞–∑. –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏.üí¨")
        waiting_for_order.remove(user_id)
        return

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
    if "–æ–ø–µ—Ä–∞—Ç–æ—Ä" in text:
        await message.answer("–û–ø–µ—Ä–∞—Ç–æ—Ä —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏. –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ!ü´Ç")
        await bot.send_message(
            ADMIN_ID,
            f"üì© –ó–∞–ø—Ä–æ—Å –∫ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É!\n"
            f"–ò–º—è: {message.from_user.full_name}\n"
            f"Username: @{message.from_user.username or '–Ω–µ—Ç'}\n"
            f"–°–æ–æ–±—â–µ–Ω–∏–µ: {message.text if message.text else '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª –º–µ–¥–∏–∞-—Ñ–∞–π–ª'}"
        )
        return

    # –ü–æ–∏—Å–∫ –æ—Ç–≤–µ—Ç–∞ –≤ FAQ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π)
    if message.text:
        response = find_best_match(text)
        if response:
            await message.answer(response)
            return

    # –û—Ç–≤–µ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –Ω–∞—à—ë–ª –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å. –ù–∞–ø–∏—à–∏—Ç–µ —Å–ª–æ–≤–æ '–æ–ø–µ—Ä–∞—Ç–æ—Ä' –¥–ª—è —Å–≤—è–∑–∏ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º.")

async def main():
    await dp.start_polling()

if __name__ == "__main__":
    asyncio.run(main())
