import os
import re
import asyncio
from aiogram import Bot, Dispatcher, types

TOKEN = "7559588518:AAEv5n_8N_gGo97HwpZXDHTi3EQ40S1aFcI"
ADMIN_ID = 7095008192  

FAQ = {
    r"(—Å–¥–µ–ª–∞.*|–∑–∞–∫–∞–∑.*)": "–î–ª—è –∑–∞–∫–∞–∑–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º —Å–ª–æ–≤–æ "–æ–ø–µ—Ä–∞—Ç–æ—Ä" –±–æ—Ç—É. –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
    r"(—Å–∫–æ–ª—å.*|—Å—Ç–æ–∏.*|–¥–æ—Å—Ç–∞–≤–∫.*—Ü–µ–Ω–∞.*|—Ü–µ–Ω–∞.*–¥–æ—Å—Ç–∞–≤–∫.*)": "–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ –∏—Å—Ö–æ–¥—è –∏–∑ –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏, –≤–µ—Å–∞ –≥—Ä—É–∑–∞. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É —Å–ª–æ–≤–æ "–æ–ø–µ—Ä–∞—Ç–æ—Ä" –∏ –º–µ–Ω–µ–¥–∂–µ—Ä —Å –í–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è.",
    r"(–≤—Ä–µ–º—è.*|—Å—Ä–æ–∫.*|–∫–æ–≥–¥–∞.*–ø—Ä–∏–¥–µ—Ç.*|—á–µ—Ä–µ–∑.*–¥–Ω–µ–π.*|—Å—Ä–æ–∫–∏.*–¥–æ—Å—Ç–∞–≤–∫.*)": "–°—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –±—ã—Å—Ç—Ä—ã–º –∞–≤—Ç–æ: 10-15 –¥–Ω–µ–π, –º–µ–¥–ª–µ–Ω–Ω—ã–º –∞–≤—Ç–æ: 15-20 –¥–Ω–µ–π. (–°—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ —É–∫–∞–∑–∞–Ω—ã –¥–æ —Ä—ã–Ω–∫–∞ –Æ–∂–Ω—ã–µ –í–æ—Ä–æ—Ç–∞ –≤ –≥.–ú–æ—Å–∫–≤–∞.)"
}

def find_best_match(user_text):
    user_text = user_text.lower()
    best_match = None
    best_score = 0
    for pattern, answer in FAQ.items():
        match = re.findall(pattern, user_text)
        if match:
            score = sum(len(m) for m in match)
            if score > best_score:
                best_score = score
                best_match = answer
    return best_match

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –∞ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –Ω–∞–π—Ç–∏ –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—Ç.\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: '–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –¥–æ—Å—Ç–∞–≤–∫–∞?' –∏–ª–∏ '–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑?'\n"
        "–ï—Å–ª–∏ –Ω—É–∂–µ–Ω –∂–∏–≤–æ–π —á–µ–ª–æ–≤–µ–∫ ‚Äî –Ω–∞–ø–∏—à–∏ —Å–ª–æ–≤–æ "–æ–ø–µ—Ä–∞—Ç–æ—Ä"."
    )

@dp.message_handler()
async def search_answer(message: types.Message):
    text = message.text.lower()

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å–∏—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
    if "–æ–ø–µ—Ä–∞—Ç–æ—Ä" in text:
        await message.answer("–û–ø–µ—Ä–∞—Ç–æ—Ä —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏. –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ!")
        await bot.send_message(
            7095008192,
            f"üì© –ó–∞–ø—Ä–æ—Å –∫ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É!\n"
            f"–ò–º—è: {message.from_user.full_name}\n"
            f"Username: @{message.from_user.username if message.from_user.username else '–Ω–µ—Ç'}\n"
            f"–°–æ–æ–±—â–µ–Ω–∏–µ: {message.text}"
        )
        return

    # –ü–æ–∏—Å–∫ –æ—Ç–≤–µ—Ç–∞ –≤ FAQ
    response = find_best_match(text)
    if response:
        await message.answer(response)
    else:
        await message.answer("–ò–∑–≤–∏–Ω–∏, —è –Ω–µ –Ω–∞—à—ë–ª –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å. –ù–∞–ø–∏—à–∏ –Ω–∞–º @probuykmvadmin")

if __name__ == '__main__':
    asyncio.run(dp.start_polling())
