import re
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.dispatcher.filters import Command
import os

TOKEN = "7559588518:AAEv5n_8N_gGo97HwpZXDHTi3EQ40S1aFcI"
ADMIN_ID = 7095008192
USERS_FILE = "users.txt"  # –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

# –°–ø–∏—Å–∫–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
waiting_for_order = set()
active_users = set()  # –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ø–∞–º—è—Ç–∏

# –°–ø–∏—Å–æ–∫ —á–∞—Å—Ç—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤
FAQ = {
    r"(?i)\b(—Å–¥–µ–ª–∞—Ç—å|–∑–∞–∫–∞–∑|–∑–∞–∫–∞–∑–∞—Ç—å|–æ—Ñ–æ—Ä–º–∏—Ç—å)\b": 
        "–î–ª—è –∑–∞–∫–∞–∑–∞ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–ª–æ–≤–æ '–æ–ø–µ—Ä–∞—Ç–æ—Ä' –∏ –æ–ø–∏—à–∏—Ç–µ —Ç–æ, —á—Ç–æ —Ö–æ—Ç–µ–ª–∏ –±—ã –∑–∞–∫–∞–∑–∞—Ç—å. –ú–µ–Ω–µ–¥–∂–µ—Ä —Å –í–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è.üí¨",
    r"(?i)\b(—Å–∫–æ–ª—å–∫–æ|—Å—Ç–æ–∏–º–æ—Å—Ç—å|—Ü–µ–Ω–∞|—Å—Ç–æ–∏—Ç|–¥–æ—Å—Ç–∞–≤–∫–∞)\b": 
        "–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ –∏—Å—Ö–æ–¥—è –∏–∑ –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏ –∏ –≤–µ—Å–∞ –≥—Ä—É–∑–∞. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É —Å–ª–æ–≤–æ '–æ–ø–µ—Ä–∞—Ç–æ—Ä', –∏ –º–µ–Ω–µ–¥–∂–µ—Ä —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è.",
    r"(?i)\b(–≤—Ä–µ–º—è|—Å—Ä–æ–∫|–∫–æ–≥–¥–∞|–¥–Ω–µ–π|—Å—Ä–æ–∫–∏|–¥–æ—Å—Ç–∞–≤—è—Ç)\b": 
        "–°—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –±—ã—Å—Ç—Ä—ã–º –∞–≤—Ç–æ: 10-15 –¥–Ω–µ–π, –º–µ–¥–ª–µ–Ω–Ω—ã–º –∞–≤—Ç–æ: 15-20 –¥–Ω–µ–π. (–°—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ —É–∫–∞–∑–∞–Ω—ã –¥–æ —Ä—ã–Ω–∫–∞ –Æ–∂–Ω—ã–µ –í–æ—Ä–æ—Ç–∞ –≤ –≥.–ú–æ—Å–∫–≤–∞.)"
}

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
def save_user(user_id):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ñ–∞–π–ª"""
    user_id = str(user_id)
    if user_id not in active_users:
        active_users.add(user_id)
        with open(USERS_FILE, 'a') as f:
            f.write(f"{user_id}\n")

def load_users():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Ñ–∞–π–ª–∞"""
    if not os.path.exists(USERS_FILE):
        return set()
    
    with open(USERS_FILE, 'r') as f:
        return {line.strip() for line in f if line.strip()}

def find_best_match(user_text):
    """–ü–æ–∏—Å–∫ –æ—Ç–≤–µ—Ç–∞ –≤ FAQ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º"""
    user_text = user_text.lower()
    for pattern, answer in FAQ.items():
        if re.search(pattern, user_text):
            return answer
    return None

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    save_user(message.from_user.id)
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! ü§ùüèª –ú—ã –∫–æ–º–ø–∞–Ω–∏—è, –∑–∞–Ω–∏–º–∞—é—â–∞—è—Å—è –ø–æ–∏—Å–∫–æ–º, –≤—ã–∫—É–ø–æ–º –∏ –¥–æ—Å—Ç–∞–≤–∫–æ–π —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –ö–∏—Ç–∞—è.\n\n"
        "–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –∞ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –Ω–∞–π—Ç–∏ –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—Ç.\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä:\n"
        "- –°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –¥–æ—Å—Ç–∞–≤–∫–∞? üöö\n"
        "- –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑? üì•\n\n"
        "–ï—Å–ª–∏ –Ω—É–∂–µ–Ω –∂–∏–≤–æ–π —á–µ–ª–æ–≤–µ–∫ ‚Äî –Ω–∞–ø–∏—à–∏ —Å–ª–æ–≤–æ '–æ–ø–µ—Ä–∞—Ç–æ—Ä'.\n"
        "–ß—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ ‚Äî –≤—ã–±–µ—Ä–∏—Ç–µ /buy –≤ –º–µ–Ω—é."
    )

@dp.message_handler(commands=['buy'])
async def ask_order(message: types.Message):
    user_id = message.from_user.id
    waiting_for_order.add(user_id)
    await message.answer("–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å? –í –∫–∞–∫–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ? üì¶\n–ú–æ–∂–µ—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–æ—Ç–æ –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞.")

@dp.message_handler(Command('broadcast'), user_id=ADMIN_ID)
async def broadcast_message(message: types.Message):
    """–†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)"""
    if not message.reply_to_message:
        await message.answer("‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /broadcast –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–æ—Å–ª–∞—Ç—å")
        return
    
    users = load_users()
    if not users:
        await message.answer("‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏")
        return
    
    await message.answer(f"‚è≥ –ù–∞—á–∏–Ω–∞—é —Ä–∞—Å—Å—ã–ª–∫—É –¥–ª—è {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    
    success = 0
    failed = 0
    
    for user_id in users:
        try:
            await bot.copy_message(
                chat_id=user_id,
                from_chat_id=message.chat.id,
                message_id=message.reply_to_message.message_id
            )
            success += 1
            await asyncio.sleep(0.1)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
        except Exception as e:
            failed += 1
    
    await message.answer(
        f"‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞:\n"
        f"–£—Å–ø–µ—à–Ω–æ: {success}\n"
        f"–ù–µ —É–¥–∞–ª–æ—Å—å: {failed}"
    )

# –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message_handler(content_types=types.ContentTypes.ANY)
async def handle_all_messages(message: types.Message):
    user_id = str(message.from_user.id)
    save_user(user_id)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –ª—é–±–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
    
    text = message.text.lower() if message.text else ""

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–æ–≤
    if int(user_id) in waiting_for_order:
        caption = (
            f"üì¶ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑!\n"
            f"üë§ –ò–º—è: {message.from_user.full_name}\n"
            f"üîó Username: @{message.from_user.username or '–Ω–µ—Ç'}"
        )

        if message.text:
            caption += f"\n‚úâÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ: {message.text}"
            await bot.send_message(ADMIN_ID, caption)
        elif message.photo:
            await bot.send_photo(ADMIN_ID, message.photo[-1].file_id, caption=caption)
        elif message.document:
            await bot.send_document(ADMIN_ID, message.document.file_id, caption=caption)
        else:
            await bot.send_message(ADMIN_ID, caption + "\n[‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª –Ω–µ—Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è]")

        await message.answer("‚úÖ –°–ø–∞—Å–∏–±–æ! –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à –∑–∞–∫–∞–∑. –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏.üí¨")
        waiting_for_order.remove(int(user_id))
        return

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
    if "–æ–ø–µ—Ä–∞—Ç–æ—Ä" in text:
        await message.answer("üîÑ –û–ø–µ—Ä–∞—Ç–æ—Ä —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏. –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ!ü´Ç")
        await bot.send_message(
            ADMIN_ID,
            f"üì© –ó–∞–ø—Ä–æ—Å –∫ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É!\n"
            f"üë§ –ò–º—è: {message.from_user.full_name}\n"
            f"üîó Username: @{message.from_user.username or '–Ω–µ—Ç'}\n"
            f"‚úâÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ: {message.text if message.text else 'üìé –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª –º–µ–¥–∏–∞-—Ñ–∞–π–ª'}"
        )
        return

    # –ü–æ–∏—Å–∫ –æ—Ç–≤–µ—Ç–∞ –≤ FAQ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π)
    if message.text:
        response = find_best_match(text)
        if response:
            await message.answer(response)
            return

    # –û—Ç–≤–µ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    await message.answer("‚ùì –ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –Ω–∞—à—ë–ª –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å. –ù–∞–ø–∏—à–∏—Ç–µ —Å–ª–æ–≤–æ '–æ–ø–µ—Ä–∞—Ç–æ—Ä' –¥–ª—è —Å–≤—è–∑–∏ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º.")

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
active_users.update(load_users())

async def main():
    await dp.start_polling()

if __name__ == "__main__":
    asyncio.run(main())

if __name__ == "__main__":
    asyncio.run(main())
