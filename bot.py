import os
import re
import json
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ContentType
from aiogram.utils import executor
from datetime import datetime

TOKEN = "7559588518:AAEv5n_8N_gGo97HwpZXDHTi3EQ40S1aFcI"
ADMIN_ID = 7095008192
WAREHOUSE_ID = 7095008192

# –ê–¥—Ä–µ—Å —Å–∫–ª–∞–¥–∞ –≤ –ö–∏—Ç–∞–µ
CHINA_WAREHOUSE_ADDRESS = """–ö–∏—Ç–∞–π, –≥. –ì—É–∞–Ω—á–∂–æ—É, —Ä–∞–π–æ–Ω –ë–∞–π—é–Ω—å
—É–ª. –°–∫–ª–∞–¥—Å–∫–∞—è 123, —Å–∫–ª–∞–¥ 456
–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ: –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω
–¢–µ–ª–µ—Ñ–æ–Ω: +86 123 4567 8910
–í–∞—à –∫–æ–¥: {user_code}"""

DATA_FILE = "data.json"

DELIVERY_OPTIONS = {
    "üöó –ë—ã—Å—Ç—Ä–æ–µ –∞–≤—Ç–æ": "–ë—ã—Å—Ç—Ä–∞—è –∞–≤—Ç–æ–¥–æ—Å—Ç–∞–≤–∫–∞ (10-15 –¥–Ω–µ–π)",
    "üöõ –ú–µ–¥–ª–µ–Ω–Ω–æ–µ –∞–≤—Ç–æ": "–ú–µ–¥–ª–µ–Ω–Ω–∞—è –∞–≤—Ç–æ–¥–æ—Å—Ç–∞–≤–∫–∞ (15-20 –¥–Ω–µ–π)",
    "‚úàÔ∏è –ê–≤–∏–∞": "–ê–≤–∏–∞–¥–æ—Å—Ç–∞–≤–∫–∞ (5-7 –¥–Ω–µ–π)",
    "üöÇ –ñ–î": "–ñ–µ–ª–µ–∑–Ω–æ–¥–æ—Ä–æ–∂–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ (18-25 –¥–Ω–µ–π)"
}

def load_data():
    if os.path.exists(DATA_FILE):
        try:
            with open(DATA_FILE, "r", encoding="utf-8") as f:
                return json.load(f)
        except (json.JSONDecodeError, FileNotFoundError):
            return {}
    return {}

def save_data(data):
    with open(DATA_FILE, "w", encoding="utf-8") as f:
        json.dump(data, f, ensure_ascii=False, indent=2)

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

class UserStates:
    WAITING_FOR_TRACK = "waiting_for_track"
    WAITING_FOR_DELIVERY = "waiting_for_delivery"
    WAITING_FOR_ORDER_DETAILS = "waiting_for_order_details"

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å–±–æ—Ä–Ω—ã–º–∏ –≥—Ä—É–∑–∞–º–∏ –∏–∑ –ö–∏—Ç–∞—è.\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/getcod - –ø–æ–ª—É—á–∏—Ç—å –ª–∏—á–Ω—ã–π –Ω–æ–º–µ—Ä\n"
        "/adress - –∞–¥—Ä–µ—Å —Å–∫–ª–∞–¥–∞ –≤ –ö–∏—Ç–∞–µ\n"
        "/sendtrack - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä\n"
        "/buy - —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑\n"
        "/manager - —Å–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º\n\n"
        "–î–ª—è –±—ã—Å—Ç—Ä–æ–π —Å–≤—è–∑–∏ —Ç–∞–∫–∂–µ –º–æ–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å '–æ–ø–µ—Ä–∞—Ç–æ—Ä'"
    )

# –ö–æ–º–∞–Ω–¥–∞ /buy - –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
@dp.message_handler(commands=['buy'])
async def start_order(message: types.Message):
    data = load_data()
    user_id = str(message.from_user.id)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ–¥
    if user_id not in data:
        await message.answer("–°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏—Ç–µ –ª–∏—á–Ω—ã–π –Ω–æ–º–µ—Ä —á–µ—Ä–µ–∑ /getcod")
        return
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞
    data[user_id]['state'] = UserStates.WAITING_FOR_ORDER_DETAILS
    save_data(data)
    
    await message.answer(
        "üì¶ –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞\n\n"
        "–ù–∞–ø–∏—à–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å –∏ –≤ –∫–∞–∫–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ?\n"
        "–ú–æ–∂–Ω–æ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–æ—Ç–æ –∏–ª–∏ —Ñ–∞–π–ª —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Ç–æ–≤–∞—Ä–∞.\n\n"
        "–ü—Ä–∏–º–µ—Ä:\n"
        "–§—É—Ç–±–æ–ª–∫–∏ —á–µ—Ä–Ω—ã–µ, —Ä–∞–∑–º–µ—Ä—ã S-5—à—Ç, M-3—à—Ç, L-2—à—Ç\n"
        "–î–∂–∏–Ω—Å—ã —Å–∏–Ω–∏–µ 2—à—Ç\n"
        "–ö—Ä–æ—Å—Å–æ–≤–∫–∏ –±–µ–ª—ã–µ 42 —Ä–∞–∑–º–µ—Ä - 1 –ø–∞—Ä–∞"
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞ (—Ç–µ–∫—Å—Ç + —Ñ–∞–π–ª—ã)
@dp.message_handler(content_types=[ContentType.TEXT, ContentType.PHOTO, ContentType.DOCUMENT], 
                    state=UserStates.WAITING_FOR_ORDER_DETAILS)
async def process_order_details(message: types.Message):
    data = load_data()
    user_id = str(message.from_user.id)
    
    if user_id not in data or data[user_id].get('state') != UserStates.WAITING_FOR_ORDER_DETAILS:
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∞
    order_info = f"üõí –ù–æ–≤—ã–π –∑–∞–∫–∞–∑!\n\n" \
                 f"–ö–ª–∏–µ–Ω—Ç: {data[user_id]['full_name']}\n" \
                 f"–ö–æ–¥: {data[user_id]['code']}\n" \
                 f"Username: @{message.from_user.username or '–Ω–µ—Ç'}\n\n" \
                 f"–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞:\n{message.text if message.text else '–°–º. –≤–ª–æ–∂–µ–Ω–∏—è'}"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∑–∞–∫–∞–∑–∞
    await bot.send_message(ADMIN_ID, order_info)
    
    # –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–æ—Ç–æ –∏–ª–∏ —Ñ–∞–π–ª - –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º –∏—Ö –∞–¥–º–∏–Ω—É
    if message.photo:
        await bot.send_photo(ADMIN_ID, message.photo[-1].file_id, 
                           caption=f"–§–æ—Ç–æ –æ—Ç {data[user_id]['full_name']}")
    elif message.document:
        await bot.send_document(ADMIN_ID, message.document.file_id, 
                              caption=f"–§–∞–π–ª –æ—Ç {data[user_id]['full_name']}")
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    data[user_id]['state'] = None
    save_data(data)
    
    await message.answer(
        "‚úÖ –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç! –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π.\n\n"
        "–í—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –µ—â–µ –æ–¥–∏–Ω –∑–∞–∫–∞–∑ —á–µ—Ä–µ–∑ /buy –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä —á–µ—Ä–µ–∑ /sendtrack"
    )

# –ö–æ–º–∞–Ω–¥–∞ /manager - —Å–≤—è–∑—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º (–∞–Ω–∞–ª–æ–≥ "–æ–ø–µ—Ä–∞—Ç–æ—Ä")
@dp.message_handler(commands=['manager'])
async def contact_manager(message: types.Message):
    data = load_data()
    user_id = str(message.from_user.id)
    
    user_code = data.get(user_id, {}).get('code', '–Ω–µ—Ç –∫–æ–¥–∞')
    
    await message.answer("–ú–µ–Ω–µ–¥–∂–µ—Ä —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏.")
    await bot.send_message(
        ADMIN_ID,
        f"üìû –ó–∞–ø—Ä–æ—Å —Å–≤—è–∑–∏ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º!\n"
        f"–ö–ª–∏–µ–Ω—Ç: {message.from_user.full_name}\n"
        f"Username: @{message.from_user.username or '–Ω–µ—Ç'}\n"
        f"–ö–æ–¥: {user_code}\n\n"
        f"–î–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ—Ç–≤–µ—Ç–∞: https://t.me/{message.from_user.username}" if message.from_user.username else ""
    )

# ... (–æ—Å—Ç–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∫–æ–¥–∞ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)

if __name__ == "__main__":
    if not os.path.exists(DATA_FILE):
        save_data({})
        
    executor.start_polling(dp, skip_updates=True)
